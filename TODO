
- better documentation for text methods (add_code, code_get, code_put, ...)

- documentation for ARice and BLVec

- tests for invalid behavior
- tests for consistent die return strings
  x read unary off end of stream
  x put negative numbers should give "value must be >= 0" for all put_*
  x write with undefined value
  - put_* with undefined parameters or undef value
  - get_* with undefined parameters
  - put_string with invalid string (e.g. '0012')

- Export

- Would be nice to do Moo/Mouse/Moose interchangably.  Any::Mouse, basically.
  mst says he's moving Moo toward a Mouse replacement, but at the moment there
  are a lot of changes to the module source between the two.  See:

    https://gist.github.com/1259851

- text code needs some redoing

- tie to a file to avoid holding everything in memory.
  Either File::Map or PerlIO :mmap or Sys::Mmap

- test all open modes, especially write-only

- MinimalVec read off end of stream:  get_unary and get_unary1 

CODES:

- m > 2 Fibonacci codes

- Ternary Comma

- Fenwick punctured codes

- Goldbach and Ulam additive codes.  Probably not efficient
  for anything large.

- Thoughts on Huffman, arithmetic
